A0,A1,A2,A3,A4,A5,A6,A7,C,Z,EQ,NEG,OVR,SWP,IRQ,ENABLE,   REGA-EIN,REGA-EOUT,REGB-EIN,REGB-EOUT,REGC-EIN,REGC-EOUT,REGS1-EIN,REGS1-EOUT,REGS2-EIN,REGS2-EOUT,REGF1-EIN,REGF1-EOUT,REGF2-EIN,REGF2-EOUT,PC-EIN,ROM-EDOUT,MEM-EIN,MEM-EOUT,MEMAL-EIN,MEMAH-EIN,STK-EOUT,ROM-EAOUT,PC-EOUT,RST,S0,S1,S2,S3,P0,P1,P2,PG,IV-EIN,IV-EOUT,SPARE1,SPARE2,SPARE3,SPARE4,INC,HALT
#   0 - NULL
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   0       ,0        ,0       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,0        ,0      ,0       ,0        ,0        ,0       ,0        ,0      ,0  ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0
#   1 - MOV R,M 
1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   0       ,0        ,0       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,1        ,1      ,0       ,0        ,0        ,0       ,0        ,0      ,0  ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0
#   2 - MOV R,MAL
0 ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   0       ,0        ,0       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,1        ,0      ,0       ,1        ,0        ,0       ,0        ,0      ,0  ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0
#   3 - MOV R,MAH
1 ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   0       ,0        ,0       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,1        ,0      ,0       ,0        ,1        ,0       ,0        ,0      ,0  ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0
#   4 - MOV R,A
0 ,0 ,1 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   1       ,0        ,0       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,1        ,0      ,0       ,0        ,0        ,0       ,0        ,0      ,0  ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0
#   5 - MOV R,B
1 ,0 ,1 ,0 ,0 ,0 ,0 ,0 ,0,0,0 ,0  ,0  ,0  ,0  ,1     ,   0       ,0        ,1       ,0        ,0       ,0        ,0        ,0         ,0         ,0        ,0        ,0         ,0        ,0         ,0     ,1        ,0      ,0       ,0        ,0        ,0       ,0        ,0      ,0  ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0     ,0      ,0     ,0     ,0     ,0     ,0  ,0

"MOV R,S1",6,00000110,6,Move value in current ROM address to REG-S1,ROM,REG-S1,0x40,0x80,0x0,0x1,0x0,,,,,,,1,,,,,,,,,1,,,,,,,,,0,0,0,1   ,,,,,,,,,,,
"MOV R,S2",7,00000111,7,Move value in current ROM address to REG-S2,ROM,REG-S2,0x0,0x81,0x0,0x1,0x0,,,,,,,,,1,,,,,,,1,,,,,,,,,0,0,0,1   ,,,,,,,,,,,
"MOV R,IV",8,00001000,8,Move value in current ROM address to REG-IV,ROM,REG-IV,0x0,0x80,0x0,0x1,0x1,,,,,,,,,,,,,,,,1,,,,,,,,,0,0,0,1   ,,,1,,,,,,,,
,9,00001001,9,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,10,00001010,A,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,11,00001011,B,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,12,00001100,C,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,13,00001101,D,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,14,00001110,E,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HALT,15,00001111,F,Halts the processor,,,0x0,0x0,0x0,0x0,0x80,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,,1,
"MOV M,PC",16,00010000,10,Move value in MEM pointed to by MEMAH and MEMAL to PC - This does a jump,MEM,PC,0x0,0x40,0x2,0x6,0x0,,,,,,,,,,,,,,,1,,,1,,,,,,,JMP    ,,,,,,,,,,,
"MOV M,A",17,00010001,11,Move value in MEM pointed to by MEMAH and MEMAL to REG-A,MEM,REG-A,0x1,0x0,0x2,0x1,0x0,1,,,,,,,,,,,,,,,,,1,,,,,,,1,0,0,0,0,0,0  ,,,,,,,,,,,
"MOV M,B",18,00010010,12,Move value in MEM pointed to by MEMAH and MEMAL to REG-B,MEM,REG-B,0x4,0x0,0x2,0x1,0x0,,,1,,,,,,,,,,,,,,,1,,,,,,,1,0,0,0,0,0,0  ,,,,,,,,,,,
"MOV M,S1",19,00010011,13,Move value in MEM pointed to by MEMAH and MEMAL to REG-S1,MEM,REG-S1,0x40,0x0,0x2,0x1,0x0,,,,,,,1,,,,,,,,,,,1,,,,,,,1,0,0,0,0,0,0  ,,,,,,,,,,,
"MOV M,S2",20,00010100,14,Move value in MEM pointed to by MEMAH and MEMAL to REG-S1,MEM,REG-S2,0x0,0x1,0x2,0x1,0x0,,,,,,,,,1,,,,,,,,,1,,,,,,,1,0,0,0,0,0,0  ,,,,,,,,,,,
"MOV M,IV",21,00010101,15,Move value in MEM pointed to by MEMAH and MEMAL to REG-IV,MEM,REG-IV,0x0,0x0,0x2,0x1,0x1,,,,,,,,,,,,,,,,,,1,,,,,,,1,0,0,0,0,0,0  ,,,1,,,,,,,,
,22,00010110,16,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,23,00010111,17,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,24,00011000,18,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,25,00011001,19,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,26,00011010,1A,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,27,00011011,1B,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,28,00011100,1C,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,29,00011101,1D,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,30,00011110,1E,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,0,,,,,,,,,,,
,31,00011111,1F,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INC A,32,00100000,20,Increment REG-A,,,0x0,0x0,0x0,0x0,0x40,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,1,,
INC B,33,00100001,21,Increment REG-B,,,0x0,0x0,0x0,0x0,0x40,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,1,,
INC C,34,00100010,22,Increment REG-C,,,0x0,0x0,0x0,0x0,0x40,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,1,,
INC MA,35,00100011,23,Increment MEM pointer address,,,0x0,0x0,0x0,0x0,0x40,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,1,,
,36,00100100,24,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,37,00100101,25,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,38,00100110,26,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,39,00100111,27,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,40,00101000,28,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,41,00101001,29,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,42,00101010,2A,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,43,00101011,2B,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,44,00101100,2C,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,45,00101101,2D,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,46,00101110,2E,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,47,00101111,2F,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MOV A,PC",48,00110000,30,Move value in REG-A to PC - This does a jump.,REG-A,PC,0x2,0x40,0x0,0x6,0x0,,1,,,,,,,,,,,,,1,,,,,,,,,,JMP,,,,,,,,,,,
"MOV A,RAM",49,00110001,31,Move value in REG-A to MEM - Address is pointered to by MEMAL and MEMAH,REG-A,MEM,0x2,0x0,0x1,0x1,0x0,,1,,,,,,,,,,,,,,,1,,,,,,,,0,0,0,0,,,,,,,,,,,
"MOV A,ML",50,00110010,32,Move value in REG-A to MENAL,REG-A,MEMAL,0x2,0x0,0x4,0x1,0x0,,1,,,,,,,,,,,,,,,,,1,,,,,,0,0,0,1,,,,,,,,,,,
"MOV A,MH",51,00110011,33,Move value in REG-A to MEMAH,REG-A,MEMAH,0x2,0x0,0x8,0x1,0x0,,1,,,,,,,,,,,,,,,,,,1,,,,,0,0,0,1,,,,,,,,,,,
"MOV A,B",52,00110100,34,Move value in REG-A to REG-B,REG-A,REG-B,0x6,0x0,0x0,0x1,0x0,,1,1,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV A,S1",53,00110101,35,Move value in REG-A to REG-S1,REG-A,REG-S1,0x42,0x0,0x0,0x1,0x0,,1,,,,,1,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV A,S2",54,00110110,36,Move value in REG-A to REG-S2,REG-A,REG-S2,0x2,0x1,0x0,0x1,0x0,,1,,,,,,,1,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV A,IV",55,00110111,37,Move value in REG-A to REG-IV,REG-A,REG-IV,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,56,00111000,38,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,57,00111001,39,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,58,00111010,3A,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,59,00111011,3B,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,60,00111100,3C,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,61,00111101,3D,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,62,00111110,3E,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
,63,00111111,3F,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,PC",64,01000000,40,Move value in REG-B to PC - This does a jump.,REG-B,PC,0x8,0x40,0x0,0x6,0x0,,,,1,,,,,,,,,,,1,,,,,,,,,,JMP,,,,,,,,,,,
"MOV B,RAM",65,01000001,41,Move value in REG-B to MEM - Address is pointered to by MEMAL and MEMAH,REG-B,MEM,0x8,0x0,0x1,0x1,0x0,,,,1,,,,,,,,,,,,,1,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,ML",66,01000010,42,Move value in REG-B to MENAL,REG-B,MEMAL,0x8,0x0,0x4,0x1,0x0,,,,1,,,,,,,,,,,,,,,1,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,MH",67,01000011,43,Move value in REG-B to MEMAH,REG-B,MEMAH,0x8,0x0,0x8,0x1,0x0,,,,1,,,,,,,,,,,,,,,,1,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,A",68,01000100,44,Move value in REG-B to REG-A,REG-B,REG-A,0x9,0x0,0x0,0x1,0x0,1,,,1,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,S1",69,01000101,45,Move value in REG-B to REG-S1,REG-B,REG-S1,0x48,0x0,0x0,0x1,0x0,,,,1,,,1,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,S2",70,01000110,46,Move value in REG-B to REG-S2,REG-B,REG-S2,0x8,0x1,0x0,0x1,0x0,,,,1,,,,,1,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV B,IV",71,01000111,47,Move value in REG-B to REG-IV,REG-B,REG-IV,0x8,0x0,0x0,0x1,0x0,,,,1,,,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,PC",72,01001000,48,Move value in REG-C to PC - This does a jump.,REG-C,PC,0x20,0x40,0x0,0x1,0x0,,,,,,1,,,,,,,,,1,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,RAM",73,01001001,49,Move value in REG-C to MEM - Address is pointered to by MEMAL and MEMAH,REG-C,MEM,0x20,0x0,0x1,0x1,0x0,,,,,,1,,,,,,,,,,,1,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,ML",74,01001010,4A,Move value in REG-C to MENAL,REG-C,MEMAL,0x20,0x0,0x4,0x1,0x0,,,,,,1,,,,,,,,,,,,,1,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,MH",75,01001011,4B,Move value in REG-C to MEMAH,REG-C,MEMAH,0x20,0x0,0x8,0x1,0x0,,,,,,1,,,,,,,,,,,,,,1,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,A",76,01001100,4C,Move value in REG-C to REG-A,REG-C,REG-A,0x21,0x0,0x0,0x1,0x0,1,,,,,1,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,S1",77,01001101,4D,Move value in REG-C to REG-S1,REG-C,REG-S1,0x60,0x0,0x0,0x1,0x0,,,,,,1,1,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,S2",78,01001110,4E,Move value in REG-C to REG-S2,REG-C,REG-S2,0x20,0x1,0x0,0x1,0x0,,,,,,1,,,1,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV C,IV",79,01001111,4F,Move value in REG-C to REG-IV,REG-C,REG-IV,0x20,0x0,0x0,0x1,0x0,,,,,,1,,,,,,,,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
"MOV PC,A",80,01010000,50,Move PC to REG-A,PC,REG-A,0x1,0x0,0x40,0x1,0x0,1,,,,,,,,,,,,,,,,,,,,,,1,,0,0,0,1,,,,,,,,,,,
"MOV PC,B",81,01010001,51,Move PC to REG-B,PC,REG-B,0x4,0x0,0x40,0x1,0x0,,,1,,,,,,,,,,,,,,,,,,,,1,,0,0,0,1,,,,,,,,,,,
"MOV PC,M0(R).",82,01010010,52,Move PC to MEM  location pointed to by ROM in page 0,PC,MEM(ROM),0x0,0x0,0x61,0x81,0x0,,,,,,,,,,,,,,,,,1,,,,,1,1,,0,0,0,0,0,1,,,,,,,,,
"MOV M0(R),PC",83,01010011,53,Move MEM  location pointed to by ROM in page 0 to PC - This does a jump.,MEM(ROM),PC,0x0,0x40,0x22,0x86,0x0,,,,,,,,,,,,,,,1,,,1,,,,1,,,JMP,0,1,,,,,,,,,
,84,01010100,54,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,,,
,85,01010101,55,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,,,
,86,01010110,56,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,,,
,87,01010111,57,,,,0x0,0x0,0x0,0x1,0x0,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,,,,,,,,,,,
"MOV C,R,M0",88,01011000,58,Move REG-C to MEM  location pointed to by ROM in page 0,,,0x20,0x0,0x21,0x81,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,0,1,,,,,,,,,
"MOV C,R,M1",89,01011001,59,Move REG-C to MEM  location pointed to by ROM in page 1 - Stack Page,,,0x20,0x0,0x21,0x91,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,1,1,,,,,,,,,
"MOV C,R,M2",90,01011010,5A,Move REG-C to MEM  location pointed to by ROM in page 2,,,0x20,0x0,0x21,0xA1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,2,1,,,,,,,,,
"MOV C,R,M3",91,01011011,5B,Move REG-C to MEM  location pointed to by ROM in page 3,,,0x20,0x0,0x21,0xB1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,3,1,,,,,,,,,
"MOV C,R,M4",92,01011100,5C,Move REG-C to MEM  location pointed to by ROM in page 4,,,0x20,0x0,0x21,0xC1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,4,1,,,,,,,,,
"MOV C,R,M5",93,01011101,5D,Move REG-C to MEM  location pointed to by ROM in page 5,,,0x20,0x0,0x21,0xD1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,5,1,,,,,,,,,
"MOV C,R,M6",94,01011110,5E,Move REG-C to MEM  location pointed to by ROM in page 6,,,0x20,0x0,0x21,0xE1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,6,1,,,,,,,,,
"MOV C,R,M7",95,01011111,5F,Move REG-C to MEM  location pointed to by ROM in page 7,,,0x20,0x0,0x21,0xF1,0x0,,,,,,1,,,,,,,,,,,1,,,,,1,,,0,0,0,0,7,1,,,,,,,,,
"MOV A,R,M0",96,01100000,60,Move REG-A to MEM  location pointed to by ROM in page 0,,,0x2,0x0,0x21,0x81,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,0,1,,,,,,,,,
"MOV A,R,M1",97,01100001,61,Move REG-A to MEM  location pointed to by ROM in page 1 - Stack Page,,,0x2,0x0,0x21,0x91,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,1,1,,,,,,,,,
"MOV A,R,M2",98,01100010,62,Move REG-A to MEM  location pointed to by ROM in page 2,,,0x2,0x0,0x21,0xA1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,2,1,,,,,,,,,
"MOV A,R,M3",99,01100011,63,Move REG-A to MEM  location pointed to by ROM in page 3,,,0x2,0x0,0x21,0xB1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,3,1,,,,,,,,,
"MOV A,R,M4",100,01100100,64,Move REG-A to MEM  location pointed to by ROM in page 4,,,0x2,0x0,0x21,0xC1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,4,1,,,,,,,,,
"MOV A,R,M5",101,01100101,65,Move REG-A to MEM  location pointed to by ROM in page 5,,,0x2,0x0,0x21,0xD1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,5,1,,,,,,,,,
"MOV A,R,M6",102,01100110,66,Move REG-A to MEM  location pointed to by ROM in page 6,,,0x2,0x0,0x21,0xE1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,6,1,,,,,,,,,
"MOV A,R,M7",103,01100111,67,Move REG-A to MEM  location pointed to by ROM in page 7,,,0x2,0x0,0x21,0xF1,0x0,,1,,,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,7,1,,,,,,,,,
"MOV R,M0,A",104,01101000,68,Move  MEM  location pointed to by ROM in page 0 to REG-A,,,0x1,0x0,0x22,0x81,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,0,1,,,,,,,,,
"MOV R,M1,A",105,01101001,69,Move MEM  location pointed to by ROM in page 1 to REG-A - Stack Page,,,0x1,0x0,0x22,0x91,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,1,1,,,,,,,,,
"MOV R,M2,A",106,01101010,6A,Move MEM  location pointed to by ROM in page 2 to REG-A,,,0x1,0x0,0x22,0xA1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,2,1,,,,,,,,,
"MOV R,M3,A",107,01101011,6B,Move MEM  location pointed to by ROM in page 3 to REG-A ,,,0x1,0x0,0x22,0xB1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,3,1,,,,,,,,,
"MOV R,M4,A",108,01101100,6C,Move MEM  location pointed to by ROM in page 4 to REG-A,,,0x1,0x0,0x22,0xC1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,4,1,,,,,,,,,
"MOV R,M5,A",109,01101101,6D,Move MEM  location pointed to by ROM in page 5  to REG-A ,,,0x1,0x0,0x22,0xD1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,5,1,,,,,,,,,
"MOV R,M6,A",110,01101110,6E,Move MEM  location pointed to by ROM in page 6 to  REG-A,,,0x1,0x0,0x22,0xE1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,6,1,,,,,,,,,
"MOV R,M7,A",111,01101111,6F,Move MEM  location pointed to by ROM in page 7 to  REG-A,,,0x1,0x0,0x22,0xF1,0x0,1,,,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,7,1,,,,,,,,,
"MOV B,R,M0",112,01110000,70,Move REG-B to MEM  location pointed to by ROM in page 0,,,0x8,0x0,0x21,0x81,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,0,1,,,,,,,,,
"MOV B,R,M1",113,01110001,71,Move REG-B to MEM  location pointed to by ROM in page 1 - Stack Page,,,0x8,0x0,0x21,0x91,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,1,1,,,,,,,,,
"MOV B,R,M2",114,01110010,72,Move REG-B to MEM  location pointed to by ROM in page 2,,,0x8,0x0,0x21,0xA1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,2,1,,,,,,,,,
"MOV B,R,M3",115,01110011,73,Move REG-B to MEM  location pointed to by ROM in page 3,,,0x8,0x0,0x21,0xB1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,3,1,,,,,,,,,
"MOV B,R,M4",116,01110100,74,Move REG-B to MEM  location pointed to by ROM in page 4,,,0x8,0x0,0x21,0xC1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,4,1,,,,,,,,,
"MOV B,R,M5",117,01110101,75,Move REG-B to MEM  location pointed to by ROM in page 5,,,0x8,0x0,0x21,0xD1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,5,1,,,,,,,,,
"MOV B,R,M6",118,01110110,76,Move REG-B to MEM  location pointed to by ROM in page 6,,,0x8,0x0,0x21,0xE1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,6,1,,,,,,,,,
"MOV B,R,M7",119,01110111,77,Move REG-B to MEM  location pointed to by ROM in page 7,,,0x8,0x0,0x21,0xF1,0x0,,,,1,,,,,,,,,,,,,1,,,,,1,,,0,0,0,0,7,1,,,,,,,,,
"MOV R,M0,B",120,01111000,78,Move  MEM  location pointed to by ROM in page 0 to REG-B,,,0x4,0x0,0x22,0x81,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,0,1,,,,,,,,,
"MOV R,M1,B",121,01111001,79,Move MEM  location pointed to by ROM in page 1 to REG-B - Stack Page,,,0x4,0x0,0x22,0x91,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,0,1,1,,,,,,,,,
"MOV R,M2,B",122,01111010,7A,Move MEM  location pointed to by ROM in page 2 to REG-B,,,0x4,0x0,0x22,0xA1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,2,1,,,,,,,,,
"MOV R,M3,B",123,01111011,7B,Move MEM  location pointed to by ROM in page 3 to REG-B,,,0x4,0x0,0x22,0xB1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,3,1,,,,,,,,,
"MOV R,M4,B",124,01111100,7C,Move MEM  location pointed to by ROM in page 4 to REG-B,,,0x4,0x0,0x22,0xC1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,4,1,,,,,,,,,
"MOV R,M5,B",125,01111101,7D,Move MEM  location pointed to by ROM in page 5  to REG-B,,,0x4,0x0,0x22,0xD1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,5,1,,,,,,,,,
"MOV R,M6,B",126,01111110,7E,Move MEM  location pointed to by ROM in page 6 to  REG-B,,,0x4,0x0,0x22,0xE1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,6,1,,,,,,,,,
"MOV R,M7,B",127,01111111,7F,Move MEM  location pointed to by ROM in page 7 to  REG-B,,,0x4,0x0,0x22,0xF1,0x0,,,1,,,,,,,,,,,,,,,1,,,,1,,,0,0,0,1,7,1,,,,,,,,,
JMP R,128,10000000,80,Jump to address using value held in current ROM address,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
JMP A,129,10000001,81,Jump to address from REG-A,REG-A,PC,0x2,0x40,0x0,0x6,0x0,,1,,,,,,,,,,,,,1,,,,,,,,,,JMP,,,,,,,,,,,
JMP B,130,10000010,82,Jump to address from REG-B,REG-B,PC,0x8,0x40,0x0,0x6,0x0,,,,1,,,,,,,,,,,1,,,,,,,,,,JMP,,,,,,,,,,,
JMP C,131,10000011,83,Jump to address from REG-C,REG-C,PC,0x20,0x40,0x0,0x6,0x0,,,,,,1,,,,,,,,,1,,,,,,,,,,JMP,,,,,,,,,,,
,132,10000100,84,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,133,10000101,85,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,134,10000110,86,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,135,10000111,87,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,136,10001000,88,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,137,10001001,89,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,138,10001010,8A,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,139,10001011,8B,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,140,10001100,8C,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,141,10001101,8D,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,142,10001110,8E,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,143,10001111,8F,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RTN,144,10010000,90,Return from subroutine,STK,PC,0x0,0x40,0x12,0x93,0x0,,,,,,,,,,,,,,,1,,,1,,,1,,,,RTN,1,1,,,,,,,,,
PUSH A,145,10010001,91,Push REG-A to stack,REG-A,STK,0x2,0x0,0x10,0x94,0x0,,1,,,,,,,,,,,,,,,,,,,1,,,,PUSH,1,1,,,,,,,,,
POP A,146,10010010,92,Pop stack to REG-A,STK,REG-A,0x1,0x0,0x10,0x95,0x0,1,,,,,,,,,,,,,,,,,,,,1,,,,POP,1,1,,,,,,,,,
PUSH B,147,10010011,93,Push REG-B to stack,REG-B,STK,0x8,0x0,0x10,0x94,0x0,,,,1,,,,,,,,,,,,,,,,,1,,,,PUSH,1,1,,,,,,,,,
POP B,148,10010100,94,Pop stack to REG-B,,,0x4,0x0,0x10,0x95,0x0,,,1,,,,,,,,,,,,,,,,,,1,,,,POP,1,1,,,,,,,,,
PUSH C,149,10010101,95,Push REG-C to stack,,,0x20,0x0,0x10,0x94,0x0,,,,,,1,,,,,,,,,,,,,,,1,,,,PUSH,1,1,,,,,,,,,
PUSH F1,150,10010110,96,Push REG-F1 to stack - Only first 4 bits,,,0x0,0x8,0x10,0x94,0x0,,,,,,,,,,,,1,,,,,,,,,1,,,,PUSH,1,1,,,,,,,,,
PUSH F2,151,10010111,97,Push REG-F2 to stack - Only first 4 bits,,,0x0,0x20,0x10,0x94,0x0,,,,,,,,,,,,,,1,,,,,,,1,,,,PUSH,1,1,,,,,,,,,
POP S1,152,10011000,98,POP stack to REG-S1,,,0x40,0x0,0x10,0x95,0x0,,,,,,,1,,,,,,,,,,,,,,1,,,,POP,1,1,,,,,,,,,
POP S2,153,10011001,99,Pop stack to REG-S2 - Only first 4 bits,,,0x0,0x1,0x10,0x95,0x0,,,,,,,,,1,,,,,,,,,,,,1,,,,POP,1,1,,,,,,,,,
PUSH PC,154,10011010,9A,Push PC to stack,,,0x0,0x0,0x50,0x94,0x0,,,,,,,,,,,,,,,,,,,,,1,,1,,PUSH,1,1,,,,,,,,,
,155,10011011,9B,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,156,10011100,9C,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,157,10011101,9D,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,158,10011110,9E,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,159,10011111,9F,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EXE,160,10100000,A0,"Execute ALU function - After the REG-C, REG-F1 and REG-F2 will contain results",,,0x10,0x14,0x0,0x1,0x0,,,,,1,,,,,,1,,1,,,,,,,,,,,,0,0,0,1,,,,,,,,,,,
RST,161,10100001,A1,Resets the Program Counter back to zero and clears all registers,,,0x0,0x0,0x80,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,1,CLK,,,,,,,,,,,
,162,10100010,A2,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,163,10100011,A3,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,164,10100100,A4,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,165,10100101,A5,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,166,10100110,A6,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,167,10100111,A7,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,168,10101000,A8,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,169,10101001,A9,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,170,10101010,AA,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,171,10101011,AB,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,172,10101100,AC,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,173,10101101,AD,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,174,10101110,AE,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,175,10101111,AF,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,176,10110000,B0,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,177,10110001,B1,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,178,10110010,B2,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,179,10110011,B3,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,180,10110100,B4,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,181,10110101,B5,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,182,10110110,B6,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,183,10110111,B7,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,184,10111000,B8,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,185,10111001,B9,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,186,10111010,BA,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,187,10111011,BB,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,188,10111100,BC,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,189,10111101,BD,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,190,10111110,BE,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,191,10111111,BF,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INT,192,11000000,C0,Jump to interrupt - This part pushes current PC to stack,PC,MEM(STK),0x0,0x0,0x41,0x97,0x0,,,,,,,,,,,,,,,,,1,,,,,,1,,JSI,1,1,,,,,,,,,
INT,193,11000001,C1,Jump to interrupt - This part moves current value in REG-I to PC,REG-IV,PC,0x0,0x40,0x0,0x7,0x2,,,,,,,,,,,,,,,1,,,,,,,,,,JSI,,,,1,,,,,,,
RTI,194,11000010,C2,Return from interrupt,STK,PC,0x0,0x40,0x2,0x98,0x0,,,,,,,,,,,,,,,1,,,1,,,,,,,RTI,1,1,,,,,,,,,
SI,195,11000011,C3,Set interrupt  flag - This does a software interrupt,,,0x0,0x0,0x0,0x9,0x0,,,,,,,,,,,,,,,,,,,,,,,,,SI,,,,,,,,,,,
CI,196,11000100,C4,Clear interrupt,,,0x0,0x0,0x0,0x9,0x0,,,,,,,,,,,,,,,,,,,,,,,,,SI,,,,,,,,,,,
SSI,197,11000101,C5,Set suppress interrupt,,,0x0,0x0,0x0,0x9,0x0,,,,,,,,,,,,,,,,,,,,,,,,,SI,,,,,,,,,,,
CSI,198,11000110,C6,Clear suppress interrupt,,,0x0,0x0,0x0,0x9,0x0,,,,,,,,,,,,,,,,,,,,,,,,,SI,,,,,,,,,,,
,199,11000111,C7,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,200,11001000,C8,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,201,11001001,C9,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,202,11001010,CA,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,203,11001011,CB,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,204,11001100,CC,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,205,11001101,CD,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,206,11001110,CE,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,207,11001111,CF,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,208,11010000,D0,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,209,11010001,D1,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,210,11010010,D2,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,211,11010011,D3,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,212,11010100,D4,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,213,11010101,D5,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,214,11010110,D6,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,215,11010111,D7,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,216,11011000,D8,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,217,11011001,D9,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,218,11011010,DA,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,219,11011011,DB,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,220,11011100,DC,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,221,11011101,DD,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,222,11011110,DE,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,223,11011111,DF,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BCS,224,11100000,E0,Branch to address from ROM if carry is set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BCS,225,11100001,E1,Branch to address from ROM if carry is set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BCC,226,11100010,E2,Branch to address from ROM if carry is NOT set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BCC,227,11100011,E3,Branch to address from ROM if carry is NOT set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BZS,228,11100100,E4,Branch to address from ROM if zero is set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BZS,229,11100101,E5,Branch to address from ROM if zero is set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BZC,230,11100110,E6,Branch to address from ROM if zero is NOT set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BZC,231,11100111,E7,Branch to address from ROM if zero is NOT set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BES,232,11101000,E8,Branch to address from ROM if equals is set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BES,233,11101001,E9,Branch to address from ROM if equals is set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BEC,234,11101010,EA,Branch to address from ROM if equals is NOT set - TRUE,ROM,PC,0x0,0xC0,0x0,0x6,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JMP,,,,,,,,,,,
BEC,235,11101011,EB,Branch to address from ROM if equals is NOT set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,CLK,,,,,,,,,,,
BNS,236,11101100,EC,Branch to address from ROM if negative is set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BNS,237,11101101,ED,Branch to address from ROM if negative is set - TRUE,ROM,PC,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BNC,238,11101110,EE,Branch to address from ROM if negative is NOT set - TRUE,ROM,PC,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BNC,239,11101111,EF,Branch to address from ROM if negative is NOT set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BOS,240,11110000,F0,Branch to address from ROM if overflow is set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BOS,241,11110001,F1,Branch to address from ROM if overflow is set - TRUE,ROM,PC,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BOC,242,11110010,F2,Branch to address from ROM if overflow is NOT set - TRUE,ROM,PC,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
BOC,243,11110011,F3,Branch to address from ROM if overflow is NOT set - FALSE,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ERROR
,244,11110100,F4,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,245,11110101,F5,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,246,11110110,F6,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,247,11110111,F7,,,,0x0,0x0,0x0,0x0,0x0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSR,248,11111000,F8,Jump to subroutine address in ROM - This part pushes current PC to stack,PC,STK,0x0,0x0,0x51,0x92,0x0,,,,,,,,,,,,,,,,,1,,,,1,,1,,JSR,1,1,,,,,,,,,
JSR,249,11111001,F9,Jump to subroutine address in ROM - This part moves current ROM to PC,ROM,PC,0x0,0xC0,0x0,0x2,0x0,,,,,,,,,,,,,,,1,1,,,,,,,,,JSR,,,,,,,,,,,
JSRA,250,11111010,FA,Jump to subroutine address in REG-A - This part pushes current PC to stack,,,0x0,0x0,0x51,0x92,0x0,,,,,,,,,,,,,,,,,1,,,,1,,1,,JSR,1,1,,,,,,,,,
JSRA,251,11111011,FB,Jump to subroutine address in REG-A - This part moves current REG-A to PC,REG-A,PC,0x2,0x40,0x0,0x2,0x0,,1,,,,,,,,,,,,,1,,,,,,,,,,JSR,,,,,,,,,,,
JSRB,252,11111100,FC,Jump to subroutine address in REG-B - This part pushes current PC to stack,,,0x0,0x0,0x51,0x92,0x0,,,,,,,,,,,,,,,,,1,,,,1,,1,,JSR,1,1,,,,,,,,,
JSRB,253,11111101,FD,Jump to subroutine address in REG-B - This part moves current REG-B to PC,REG-B,PC,0x8,0x40,0x0,0x2,0x0,,,,1,,,,,,,,,,,1,,,,,,,,,,JSR,,,,,,,,,,,
JSRC,254,11111110,FE,Jump to subroutine address in REG-C - This part pushes current PC to stack,,,0x0,0x0,0x51,0x92,0x0,,,,,,,,,,,,,,,,,1,,,,1,,1,,JSR,1,1,,,,,,,,,
JSRC,255,11111111,FF,Jump to subroutine address in REG-C - This part moves current REG-B to PC,REG-C,PC,0x20,0x40,0x0,0x2,0x0,,,,,,1,,,,,,,,,1,,,,,,,,,,JSR,,,,,,,,,,,
